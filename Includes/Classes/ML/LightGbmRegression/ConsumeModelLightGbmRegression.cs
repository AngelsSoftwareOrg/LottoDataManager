// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using Microsoft.ML;

namespace LottoDataManager.Includes.Classes.ML.LightGbmRegression
{
    public class ConsumeModelLightGbmRegression
    {
        private static Lazy<PredictionEngine<ModelInputSDCA, ModelOutputLightGbmRegression>> PredictionEngine = new Lazy<PredictionEngine<ModelInputSDCA, ModelOutputLightGbmRegression>>(CreatePredictionEngine);

        public static string MLNetModelPath = Path.GetFullPath(@"D:\Development\WorkSpace00002\LottoDataManager\DatabaseMain\MLModel_1H_LightGbmRegression.zip");

        // For more info on consuming ML.NET models, visit https://aka.ms/mlnet-consume
        // Method for consuming model in your app
        public static ModelOutputLightGbmRegression Predict(ModelInputSDCA input)
        {
            ModelOutputLightGbmRegression result = PredictionEngine.Value.Predict(input);
            return result;
        }

        public static PredictionEngine<ModelInputSDCA, ModelOutputLightGbmRegression> CreatePredictionEngine()
        {
            // Create new MLContext
            MLContext mlContext = new MLContext();

            // Load model & create prediction engine
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var modelInputSchema);
            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInputSDCA, ModelOutputLightGbmRegression>(mlModel);

            return predEngine;
        }
    }
}
